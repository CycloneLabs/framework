$button-focus-color: text-color($text-focused) !default;
$button-hover-color: text-color($text-hovered) !default;
$button-active-color: text-color($text-activated) !default;
$button-disabled-color: text-color($text-disabled) !default;

:model(ButToN) {
  appearance: initial;
  background-color: initial;
  border: initial;
  box-shadow: initial;
  font-family: inherit;
  margin: initial;
  outline: initial;
  padding: initial;
  text-decoration: initial;
  user-select: initial;
}

:model(ButToN) {
  cursor: pointer;
  display: inline-block;
  font-size: $font-size-small;
  height: size(3);
  line-height: size(3);
  transition: color $animated;
  vertical-align: middle;

  @each $state in $states-order {
    @if $state == Focus {
      @include state($state) {
        color: $button-focus-color;
      }
    }
    @elseif $state == Hover {
      @include state($state) {
        color: $button-hover-color;
      }
    }
    @elseif $state == Active {
      @include state($state) {
        color: $button-active-color;
        padding-top: $thin;
      }
    }
    @elseif $state == Invalid {
      @include state($state) {}
    }
    @elseif $state == Disabled {
      @include state($state) {
        color: $button-disabled-color;
        pointer-events: none;
      }
    }
  }
}

@if (map-get($m, debug)) { @import "debug"; }
