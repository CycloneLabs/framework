$list-switcher-arrow-color: $border-default !default;
$list-switcher-text-color: text-color($text-default) !default;
$list-switcher-hover-color: text-color($text-hovered) !default;
$list-switcher-focus-color: text-color($text-focused) !default;
$list-switcher-invalid-color: text-color($text-invalid) !default;
$list-switcher-disabled-color: text-color($text-disabled) !default;

:model(List-switcher) {
  appearance: initial;
  background-color: initial;
  border: initial;
  box-shadow: initial;
  font-family: inherit;
  margin: initial;
  outline: initial;
  padding: initial;
  text-decoration: initial;
  user-select: none;
}

:model(List-switcher) {
  @include ff-select-bugfix($list-switcher-text-color);
  background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 6'><path fill='#{html-encode(color-to-hex($list-switcher-text-color))}' d='M0 2 3 5 l3-3z'/></svg>");
  background-position: calc(100% - 10px) 45%;
  background-repeat: no-repeat;
  background-size: size();
  cursor: pointer;
  font-size: $font-size-small;
  height: size(3);
  line-height: size(3);
  overflow: hidden;
  transition: color $animated, text-shadow $animated;

  :has(Option) {
    color: $list-switcher-text-color;
    font-size: inherit; //Should be same
    text-shadow: initial;
  }

  @each $state in $states-order {
    @if $state == Disabled {
      @include state($state) {
        background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 6'><path fill='rgba(0,0,0,0)' stroke='#{html-encode(color-to-hex($list-switcher-disabled-color))}' d='M1 1 5 5 l-2-2 l-2 2 l4-4'/></svg>");
        pointer-events: none;
      }
    }
  }
}

@if (map-get($m, debug)) { @import "debug"; }
