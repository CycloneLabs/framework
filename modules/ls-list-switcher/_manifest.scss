$list-switcher-arrow-color: $border-default !default;
$list-switcher-text-color: text-color($text-default) !default;
$list-switcher-hover-color: text-color($text-hovered) !default;
$list-switcher-focus-color: text-color($text-focused) !default;
$list-switcher-invalid-color: text-color($text-invalid) !default;
$list-switcher-disabled-color: text-color($text-disabled) !default;

:module(List-switcher) { //TODO Safari 9.0 reset fallback
  background-color: initial;
  border: initial;
  box-shadow: initial;
  margin: initial;
  outline: initial;
  padding: initial;
  text-decoration: initial;
  user-select: initial;
}

:module(List-switcher) { //TODO Edge 13 reset fallback
  appearance: unset;
  font-family: unset;
}

:module(List-switcher) {
  background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg'
  viewBox='0 0 6 3'><path fill='#{html-encode(color-to-hex($list-switcher-text-color))}'
  d='M0 0 3 3 l3-3z'/></svg>");
  background-position: right center;
  background-repeat: no-repeat;
  background-size: size();
  cursor: pointer;
  font-size: $font-size-small;
  height: size(3);
  line-height: size(2);
  transition: color $animated, text-shadow $animated;
  overflow: hidden;
  padding-right: size();
  @include ff-select-bugfix($list-switcher-text-color);

  @include state(Focus) {
    background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 6 3'><path fill='#{html-encode(color-to-hex($list-switcher-focus-color))}'
    d='M0 0 3 3 l3-3z'/></svg>");
    @include ff-select-bugfix($list-switcher-focus-color);

    :component(option) {
      color: $list-switcher-focus-color;
    }
  }

  @include state(Hover) {
    background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 6 3'><path fill='#{html-encode(color-to-hex($list-switcher-hover-color))}'
    d='M0 0 3 3 l3-3z'/></svg>");
    @include ff-select-bugfix($list-switcher-hover-color);

    :component(option) {
      color: $list-switcher-hover-color;
    }
  }

  @include state(Invalid) {
    background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 6 3'><path fill='#{html-encode(color-to-hex($list-switcher-invalid-color))}'
    d='M0 0 3 3 l3-3z'/></svg>");
    @include ff-select-bugfix($list-switcher-invalid-color);

    :component(option) {
      color: $list-switcher-invalid-color;
    }
  }

  @include state(Disabled) {
    background-image: url("data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg'
    viewBox='0 0 6 6'><path fill='rgba(0,0,0,0)' stroke='#{html-encode(color-to-hex($list-switcher-disabled-color))}'
    d='M0 0 6 6 l-3-3 l-3 3 l6-6'/></svg>");
    pointer-events: none;
    @include ff-select-bugfix($list-switcher-disabled-color);

    :component(option) {
      color: $list-switcher-disabled-color;
    }
  }

  :component(option) {
    color: $list-switcher-text-color;
    font-size: inherit !important; //It must be same
    padding: calc((#{size(2.97)} - 1em) / 2) size(); //Magic to vertical align
    text-shadow: initial;
  }
}

@if (map-get($m, debug)) { @import "debug"; }
