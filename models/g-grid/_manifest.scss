$grid-cells                : 16 !default;
$grid-cell                 : 100% / $grid-cells !default;
$gutter-flexible           : $grid-cell / 2.8 !default;
$gutter-width              : $line-step !default;
$gutter-compensation       : -$gutter-width / 2 !default;
$half-gutter-width         : $gutter-width / 2 !default;

:model(Grid) {
  display: flex;
  flex: initial;
  flex-flow: row wrap;
  margin-left: $gutter-compensation;
  margin-right: $gutter-compensation;

  &:which(reverse) {
    flex-direction: row-reverse;
  }

  &:which(top) {
    align-items: flex-start;
  }

  &:which(middle) {
    align-items: center;
  }

  &:which(bottom) {
    align-items: flex-end;
  }

  &:which(around) {
    justify-content: space-around;
  }

  &:which(between) {
    justify-content: space-between;
  }

  &:which(start) {
    justify-content: flex-start;
    text-align: start;
  }

  &:which(center) {
    justify-content: center;
    text-align: center;
  }

  &:which(end) {
    justify-content: flex-end;
    text-align: end;
  }

  > :has(col) {
    flex: none;
    max-width: 100%;
    padding-left: $half-gutter-width;
    padding-right: $half-gutter-width;
  }

  > :has(col-x) {
    flex: 1 0 auto;
    max-width: 100%;
    padding-left: $half-gutter-width;
    padding-right: $half-gutter-width;
  }

  > :which(reverse) { flex-direction: column-reverse; }
  > :which(first) { order: -1; }
  > :which(last) { order: 1; }

  @for $i from 1 through $grid-cells {
    > :has(col-#{$i}) {
      flex: 0 0 $i * $grid-cell;
      max-width: $i * $grid-cell;
      padding-left: $half-gutter-width;
      padding-right: $half-gutter-width;
    }

    > :which(offset-#{$i}) {
      margin-left: $i * (100% / $grid-cells);
    }
  }
}

@if (map-get($m, debug)) { @import "debug"; }
